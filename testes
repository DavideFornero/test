import tkinter as tk
import tkinter.ttk as ttk
import tkinter.messagebox as msgbox
import json
import os
import calendar
from datetime import datetime


class RegistroApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Tela de Cadastro")

        self.frame_usuarios = tk.Frame(self.root)
        self.frame_usuarios.pack(fill=tk.X, padx=10, pady=5)

        self.lb_selecione_usuario = tk.Label(self.frame_usuarios, text="Selecione o usuário:")
        self.lb_selecione_usuario.pack(side=tk.LEFT)

        self.cb_usuarios = tk.StringVar()
        self.combo_usuarios = tk.ttk.Combobox(self.frame_usuarios, textvariable=self.cb_usuarios)
        self.combo_usuarios.pack(side=tk.RIGHT)
        self.combo_usuarios.bind("<<ComboboxSelected>>", self.selecionar_usuario)

        self.frame_cadastro = tk.LabelFrame(self.root, text="Criar novo cadastro")
        self.frame_cadastro.pack(fill=tk.X, padx=10, pady=5)

        self.frame_nome = tk.Frame(self.frame_cadastro)
        self.frame_nome.pack(fill=tk.X, padx=10, pady=5)

        self.lb_nome = tk.Label(self.frame_nome, text="Nome:")
        self.lb_nome.pack(side=tk.LEFT)

        self.entry_nome = tk.Entry(self.frame_nome)
        self.entry_nome.pack(side=tk.RIGHT, expand=True, fill=tk.X)

        self.bolsas = [
            "Bolsa do Brasil",
            "Bolsa Italiana",
            "Bolsa Euronext",
            "Deutsche Börse",
            "London Stock Exchange"
        ]

        self.variaveis_bolsas = {}

        for bolsa in self.bolsas:
            frame_bolsa = tk.LabelFrame(self.frame_cadastro, text=bolsa)
            frame_bolsa.pack(fill=tk.X, padx=10, pady=5)

            self.variaveis_bolsas[bolsa] = {
                "Day Trade": tk.DoubleVar(),
                "Swing Trade": tk.DoubleVar(),
                "Outros impostos": tk.DoubleVar()
            }

            for operacao, variavel in self.variaveis_bolsas[bolsa].items():
                frame_operacao = tk.Frame(frame_bolsa)
                frame_operacao.pack(fill=tk.X, padx=10, pady=5)

                lb_operacao = tk.Label(frame_operacao, text=operacao + ":")
                lb_operacao.pack(side=tk.LEFT)

                entry_operacao = tk.Entry(frame_operacao, textvariable=variavel)
                entry_operacao.pack(side=tk.RIGHT, expand=True, fill=tk.X)

        self.frame_deducoes = tk.Frame(self.frame_cadastro)
        self.frame_deducoes.pack(fill=tk.X, padx=10, pady=5)

        self.lb_deducoes = tk.Label(self.frame_deducoes, text="Deduções: Valor")
        self.lb_deducoes.pack(side=tk.LEFT)

        self.var_deducoes = tk.DoubleVar()
        self.entry_deducoes = tk.Entry(self.frame_deducoes, textvariable=self.var_deducoes)
        self.entry_deducoes.pack(side=tk.RIGHT, expand=True, fill=tk.X)

        self.frame_botoes = tk.Frame(self.root)
        self.frame_botoes.pack(fill=tk.X, padx=10, pady=5)

        self.btn_salvar = tk.Button(self.frame_botoes, text="Salvar", command=self.salvar_cadastro)
        self.btn_salvar.pack(side=tk.LEFT, padx=5)

        self.btn_contabilizar = tk.Button(self.frame_botoes, text="Contabilização", command=self.contabilizar)
        self.btn_contabilizar.pack(side=tk.RIGHT, padx=5)

        self.btn_excluir = tk.Button(self.frame_botoes, text="Excluir", command=self.excluir_cadastro)
        self.btn_excluir.pack(side=tk.LEFT, padx=5)

        self.carregar_usuarios()
